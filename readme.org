* Speed Demon
Runs internet connection speed checks for a specified interval and logs the results.

** Project aims
Allow a user to
1. Be confident that future functionality will not break current functionality (is fully tested)
2. Access great documentation
3. Easily extend the current project
4. Run a single terminal command to setup the project
5. Easily alter the default settings via command line options
6. Automate the speed testing to run at their preferred interval
7. Save results
8. Log cron errors
9. Log whether the speed test was done via a wireless or wired connection
10. Log time at which each speedtest was conducted
11. Log time when cron errors occurred

** Dependencies
*** Ruby gem
    The below dependencies can be installed to the system ruby (if using a rapsberrypi) or can be installed via a gem manager such as rbenv. Speed Demon will just run a CLI call to instatiate the gem. So ensure that the global ruby version is the version that has the below gems installed! 
**** whenever
     This gem handles cron tasks beautifully, has a great test suite, is well documented/maintained and is used by a large number of people so I decided to integrate with it to draw on its functionality.
*** Linux packages
The below linux packages are used 
**** speedtest-cli
Used to gather data on ping, download speed and upload speed
**** ip
Used to determine whether the speed test was done via a wireless or wired connection. This package comes preinstalled as standard with many linux distributions
** Hardware requirements
At least 1Ghz processor and 2Gb of RAM. (Overclocked Raspberrypi 1B)
These figures are hand wavy. 
However, on a non overclocked Raspberrypi 1 B, any CPU speed below 1GHz detrimentally affects that calculated speed. 
i.e the calculated speed will be less than that actual speed.

** Installation
(Will be pushed to ruby gems shortly <2018-11-10 Sat 07:46>)
*** Simple
1. git clone this project to a desired location
2. install the dependencies listed
3. simply install to current directory with all defaults
   : speed_demon --setup-default

This will setup the project with the following defaults:
- output directory at ~/.local/share/speed_demon
- config directory at ~/.config/speed_demon
- cron log directory at ~/.speed_demon
- speedtest check frequency of 15 minutes

*** Custom
1. git clone this project to a desired location
2. install the dependencies listed
3. simply install to current directory with all defaults
   : speed_demon --custom-output /tmp/speed_demon/output --custom-log /tmp/speed_demon/log --custom-frequency '2.minutes'

This will setup the project with the following defaults:
- output directory at /tmp/speed_demon/output
- config directory at ~/.config/speed_demon (this cannot be changed)
- cron log directory at /tmp/speed_demon/log
- speedtest check frequency of 2 minutes

Note: The most updated lists are in the code & tests
**** Frequency
Can be called with the following:
- '2.minutes' (not recommended to run any more frequent that this)
- 'hour'
- '3.hours'
- '1.day'
- '1.day, at: ['4:30 am', '6:00 pm']' (TODO: test, but i think this already works)

For more options check out the [[https://github.com/javan/whenever][whenever gem]]

*** CLI Options
: speed_demon [options]

|------------+---------------------------+------------------------------------------|
| Short flag | --options [INPUT]         | Result                                   |
|------------+---------------------------+------------------------------------------|
| -h         | --help                    | prints all options to CLI                |
| -s         | --setup-default           | setup using defaults                     |
| -o         | --custom-output [PATH]    | specify custom path for output directory |
| -l         | --custom-log [PATH]       | specify custom path for log directory    |
| -f         | --custom-frequency [TIME] | specify custom speed measuring frequency |
| -m         | --measure-speed           | manually run a speed check               |
|------------+---------------------------+------------------------------------------|

** Output
As specified by CLI option, for now all output is appended to CSV. 
The output is intended to be used for graphing and analysis.

